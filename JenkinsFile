pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        echo "Current directory before checkout: ${pwd()}"
                        sh 'ls -la'
                        checkout scm
                        echo "Current directory after checkout: ${pwd()}"
                        sh 'ls -la'
                    } catch (Exception e) {
                        echo "Failed to checkout source code: ${e}"
                        throw e
                    }
                }
            }
        }
        stage('Build Docker image') {
            steps {
                sh 'docker build -t desktop-assistant-image:v1.0.0 .'
            }
        }

        stage('Load Docker image into Minikube') {
            steps {
                sh 'minikube image load desktop-assistant-image:v1.0.0'
            }
        }

        stage('Apply Kubernetes configuration') {
            steps {
                sh 'kubectl apply -f desktop-assistant-config.yaml'
            }
        }

        stage('Update Kubernetes deployment') {
            steps {
                sh 'kubectl set image deployment/desktop-assistant desktop-assistant=desktop-assistant-image:v1.0.0'
            }
        }
    }
}